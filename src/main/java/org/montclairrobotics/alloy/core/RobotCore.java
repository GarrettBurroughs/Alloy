/*
MIT License

Copyright (c) 2018 Garrett Burroughs

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/
package org.montclairrobotics.alloy.core;

import com.qualcomm.robotcore.hardware.Gamepad;
import com.qualcomm.robotcore.hardware.HardwareMap;
import org.firstinspires.ftc.robotcore.external.Telemetry;

/**
 * Stores all of the global robot objects, including telemetry, the hardware map, and gamepads
 *
 * <p>Since essential parts to the robots operation are stored in OpMode
 *
 * <p>With this, the user can acess all of the objects throughout the project.
 *
 * <p>The robot core class creates static instances of all of the essential objects on
 * initialization The actual objects are passed in in the alloy class
 *
 * @see com.qualcomm.robotcore.eventloop.opmode.OpMode
 * @see Alloy
 * @author Garrett Burroughs
 * @version 0.1
 * @since 0.1
 */
public class RobotCore {
  /**
   * Telemetry is used for reading out information on the phones and is useful for debugging, The
   * telemetry is also used in Debug
   *
   * @see Debug
   */
  public static Telemetry telemetry;

  /**
   * The hardware map is essential to any robot and is how the ftc core interacts with the hardware
   * devices on the phones
   */
  public static HardwareMap hardwareMap;

  /** The first gamepad, generated by pressing start + 'a' on the controller */
  public static Gamepad gamepad1;
  /** The second gamepad, generated by pressing start + 'b' on the controller */
  public static Gamepad gamepad2;

  public RobotCore(
      Telemetry telemetry, HardwareMap hardwareMap, Gamepad gamepad1, Gamepad gamepad2) {
    // Instantiate all static instances
    this.telemetry = telemetry;
    this.hardwareMap = hardwareMap;
    this.gamepad1 = gamepad1;
    this.gamepad2 = gamepad2;
  }

  /**
   * Gets the hardware map of the robot
   *
   * @return the hardware map
   */
  public static HardwareMap getHardwareMap() {
    return hardwareMap;
  }

  /**
   * Gets the telemetry object of the robot
   *
   * @return telemetry
   */
  public static Telemetry getTelemetry() throws NullPointerException {
    return telemetry;
  }

  /**
   * Gets the first gamepad
   *
   * @return gamepad1
   */
  public static Gamepad getGamepad1() {
    return gamepad1;
  }

  /**
   * Gets the second gamepad
   *
   * @return gamepad1
   */
  public static Gamepad getGamepad2() {
    return gamepad2;
  }
}
